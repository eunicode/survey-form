* {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    color: #384047;
}

/* Solve white space at top */
header h1 {
    /* margin-top: 0; */
    color: #4bc970;
}

.grid-container {
    max-width: 50rem; 
    margin: 0 auto;
    padding: 20px; /* Don't see horizontal padding (it's "absorbed") when viewport
    is wide. Do see it when viewport is narrow. Probably bc items in .grid-container,
    `header` and `main`, are centered with `justify-items: center`. 
    The children of `header` and `main` ("grandchildren") are still left-justified
    though. It's like there's an outline or sack surrounding all the "grandchildren", 
    and it's only the sack that gets centered, hence why `header h1` appears centered 
    though it's a "grandchild", while `main p` is left-justified.  */
    border-radius: 8px;
    background: #f4f7f8;
}

label {
    margin-bottom: 8px;
}

input[type="text"],
input[type="email"],
input[type="number"],
textarea,
select {
    border: none; /* flat design */
    font-size: 16px;
    height: auto;
    margin: 0;
    margin-bottom: 30px;
    /* outline: 0; */
    padding: 15px;
    /* width: 100%; */
    background-color: #e8eeef;
    color: #8a97a0; /* dropdown text, arrows*/
    /* box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset; */
}

input[type="radio"],
input[type="checkbox"] {
  margin: 0 4px 8px 0;
}

select {
    border-radius: 2px;
    height: 32px;
    padding: 6px;
}

::placeholder {
    color: #8a97a0;
    opacity: 1;
}

button {
    color: #FFF;
    background-color: #4bc970;
    font-size: 18px;
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
}

/* GRID */

@supports (grid-area: auto) {
    /* No real point in making .grid-container a grid. It only makes `header` and
    `main` grid items. */
    .grid-container {
        display: grid;
        justify-items: center;
        grid-template-columns: 1fr; /* Single column, stretch */
        grid-template-rows: auto; /* Row height depends on content */
        grid-template-areas: 
        "header"
        "main"
    }

    form {
        display: grid; /* Makes inline children (like <input>) into block elements */
        /* Implicit */
        /* grid-template-columns: 1fr; */
        /* grid-template-rows: auto; */
    }

}

/* To Do 
Stretch div.grid to full width when browser width is narrow 
CSS variables for colors 
Add spacing where necessary
Add sections, though more nesting means current grid items won't be grid items 
anymore. */
